defaults
    log     global

    # Expect HTTP layer 7, rather than load-balance at layer 4
    mode    http

    # Default monitor-uri for loadbalancer healthchecks
    monitor-uri /healthz

{% if haproxy_custom_log_format is not defined %}
    # Enable http logging format to include more details logs
    option httplog
{% endif %}

    # compression gzip
    compression algo gzip
    compression type text/html text/plain text/xml text/css text/javascript application/javascript application/json text/json image/png image/jpg image/jpeg image/gif image/svg+xml

    # A connection on which no data has been transferred will not be logged (such as monitor probes)
    option  dontlognull
    option  http-ignore-probes
    option  abortonclose
    
    # Enable HTTP connection closing on the server side but support keep-alive with clients
    # (This provides the lowest latency on the client side (slow network) and the fastest session reuse on the server side)
    option  http-server-close
	
    # option 	httpclose
    # Don't use httpclose and http-server-close, httpclose will disable keepalive on the client side
    # Enable the sending of TCP keepalive packets on the client side
    option clitcpka

    # Add the X-Forwarded-For header unless the request came from 127.0.0.1 (which is Pound)
    # If it came from Pound, it will already be present
    option  forwardfor except 127.0.0.1

    # Rather than check backend servers are up with simple TCP connect, perform layer 7 HTTP GET
    option httpchk GET / 

    # If the backend health check returns 404 error, stop sending new requests to that server
    # but try to send persistent requests there
    http-check disable-on-404

    # The number of retries to perform on a server after a connection failure. There is a delay of 1 second
    # between each retry.
    retries	3

    # Keep retrying dead server in case it's just having a little flap
    option persist 

    # Fail over to another server if it really is dead
    option  redispatch

    maxconn {{ haproxy_max_connections }}

    # Connect should not take longer than 4s
    timeout connect  4s 
    
    # Client and server should match the longest
    timeout client  60s 

    # Time waiting for the server response
    timeout server  60s

    # Don't queue requests too long if saturated 
    timeout queue 60s

    # A complete request may never take that long (slowloris protection)
    timeout http-request 5s

{% if haproxy_unique_id %}
    # Unique trace ID header format
    unique-id-format {{ haproxy_unique_id_format }}
    unique-id-header {{ haproxy_unique_id_header }}
{% endif %}

{% if haproxy_custom_log %}
    # Custom log format
    log-format {{ haproxy_custom_log_format }}
{% endif %}