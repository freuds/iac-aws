.idea/*
.DS_Store
*.code-workspace

# Created by https://www.toptal.com/developers/gitignore/api/vs,terraform,ansible,git,helm,packer,vagrant
# Edit at https://www.toptal.com/developers/gitignore?templates=vs,terraform,ansible,git,helm,packer,vagrant

### Ansible ###
*.retry

### Git ###
# Created by git for backups. To disable backups in Git:
# $ git config --global mergetool.keepBackup false
*.orig

### Helm ###
# Chart dependencies
**/charts/*.tgz

### Packer ###
# Cache objects
packer.out
packer_cache/

# Crash log
crash.log

# For built boxes
*.box

### Packer Patch ###
# ignore temporary output files
output-*/

### Terraform ###
# Local .terraform directories
**/.terraform/*
**/.terraform.lock.hcl

# .tfstate files
*.tfstate
*.tfstate.*

# Terraform graph output
*.dot
*.svg

# Ansible galaxy roles
**/galaxy/roles

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
# override.tf
# override.tf.json
# *_override.tf
# *_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Python virtual environment
.venv/

### Vagrant ###
.vagrant/

# Log files (if you are creating logs in debug mode, uncomment this)
# *.log

### Vagrant Patch ###

# Node.js Tools for Visual Studio
node_modules/
**/*.zip

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc
