#     - https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets

name: Terraform VPC

on: [push, pull_request]
# on:
#   push:
#     branches:
#     - main
#     paths:
#     - 'vpc/**'
#     - '_tools/terraform/modules/**'
#   pull_request:
#     branches:
#     - main

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

   # defaults:
     # run:
      #  working-directory: ${{ env.tf_actions_working_dir }}

    steps:

    - name: Setup terraform provider
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        #terraform_wrapper: false

    - name: Checkout
      uses: actions/checkout@v2

    # Basic checkout
    - name: Verify basic
      shell: bash
      run: |
        make init
      working-directory: vpc/qa/eu-west-1

    - run: echo ${{ steps.plan.outputs.stdout }}
    - run: echo ${{ steps.plan.outputs.stderr }}
    - run: echo ${{ steps.plan.outputs.exitcode }}
    
      #run: terraform fmt -check
      #run: terraform validate -no-color
      #run: terraform plan -no-color
      #continue-on-error: true
  
    #- name: Terraform CI
     # run: |
     #   cd vpc/qa/eu-ewst-1 ; make init ; terraform fmt -check

    # make init
    # terraform init
    # terraform fmt -check
    # terraform plan

    #   # On push to main, build or change infrastructure according to Terraform configuration files
    #   # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: terraform apply -auto-approve
